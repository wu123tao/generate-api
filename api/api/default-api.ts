/* tslint:disable */
/* eslint-disable */
/**
 * V-PLUS
 * <div_style=\'font-size:14px;color:red;\'>RESTFUL_APIS</div>
 *
 * The version of the OpenAPI document: 1.0
 * Contact: xxx@qq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { GET, POST } from '../base';

// @ts-ignore
import type { ChangePasswordVo } from '../interface';
// @ts-ignore
import type { CheckDto } from '../interface';
// @ts-ignore
import type { CheckSetDto } from '../interface';
// @ts-ignore
import type { FileUploadBase64Request } from '../interface';
// @ts-ignore
import type { IdsDto } from '../interface';
// @ts-ignore
import type { LoginDto } from '../interface';
// @ts-ignore
import type { ResponseData } from '../interface';
// @ts-ignore
import type { ResponseDataBoolean } from '../interface';
// @ts-ignore
import type { ResponseDataCacheUser } from '../interface';
// @ts-ignore
import type { ResponseDataCheckFlowVo } from '../interface';
// @ts-ignore
import type { ResponseDataCheckNotAuditNumVo } from '../interface';
// @ts-ignore
import type { ResponseDataCheckSetVo } from '../interface';
// @ts-ignore
import type { ResponseDataCheckVo } from '../interface';
// @ts-ignore
import type { ResponseDataIPageCheckFlowVo } from '../interface';
// @ts-ignore
import type { ResponseDataIPageCheckSetVo } from '../interface';
// @ts-ignore
import type { ResponseDataIPageCheckVo } from '../interface';
// @ts-ignore
import type { ResponseDataIPageUserDto } from '../interface';
// @ts-ignore
import type { ResponseDataListCheckFlowVo } from '../interface';
// @ts-ignore
import type { ResponseDataListLabelValueVo } from '../interface';
// @ts-ignore
import type { ResponseDataListString } from '../interface';
// @ts-ignore
import type { ResponseDataString } from '../interface';
// @ts-ignore
import type { UserVo } from '../interface';

/**
 * 
 * @summary 审核中心-订单单价低于基准价审核
 * @tags 审核中心-信息审核
 * @param {CheckDto} [checkDto] 
  
 * @return { ResponseDataBoolean }
 */
export function auditOrderPriceUsingPOST(data:CheckDto): Promise<ResponseDataBoolean['data']> {
    const path = `/check/audit/order/price`;

    let localVarQueryParameter = { params: { ...data }} as any;

    localVarQueryParameter = data;

    return POST(path, localVarQueryParameter);
}

/**
 * 
 * @summary 修改密码
 * @tags 基础管理-用户管理
 * @param {ChangePasswordVo} [changePasswordVo] 
  
 * @return { ResponseDataBoolean }
 */
export function changePasswordUsingPOST(data:ChangePasswordVo): Promise<ResponseDataBoolean['data']> {
    const path = `/api/v1/user/manage/changePassword`;

    let localVarQueryParameter = { params: { ...data }} as any;

    localVarQueryParameter = data;

    return POST(path, localVarQueryParameter);
}

/**
 * 
 * @summary 审核中心-查询未审核信息
 * @tags 审核中心-信息审核
 
 * @return { ResponseDataCheckNotAuditNumVo }
 */
export function countUsingGET(): Promise<ResponseDataCheckNotAuditNumVo['data']> {
    const path = `/check/count`;

    let localVarQueryParameter = { params: {  }} as any;


    return GET(path, localVarQueryParameter);
}

/**
 * 
 * @summary 删除
 * @tags 文件管理
 * @param {string} [filePath] filePath
  
 * @return { ResponseDataString }
 */
export function delFileUsingGET(data:{ filePath?: string; }): Promise<ResponseDataString['data']> {
    const path = `/api/deleteFile`;

    let localVarQueryParameter = { params: { ...data }} as any;


    return GET(path, localVarQueryParameter);
}

/**
 * 
 * @summary 审核设置删除
 * @tags 审核设置
 * @param {IdsDto} [idsDto] 
  
 * @return { ResponseData }
 */
export function deleteBatchUsingPOST(data:IdsDto): Promise<ResponseData['data']> {
    const path = `/check/set/deleteBatch`;

    let localVarQueryParameter = { params: { ...data }} as any;

    localVarQueryParameter = data;

    return POST(path, localVarQueryParameter);
}

/**
 * 
 * @summary 删除
 * @tags 基础管理-用户管理
 * @param {IdsDto} [idsDto] 
  
 * @return { ResponseDataBoolean }
 */
export function deleteUsingPOST3(data:IdsDto): Promise<ResponseDataBoolean['data']> {
    const path = `/api/v1/user/manage/delete`;

    let localVarQueryParameter = { params: { ...data }} as any;

    localVarQueryParameter = data;

    return POST(path, localVarQueryParameter);
}

/**
 * 
 * @summary 审核中心-信息审核详情
 * @tags 审核中心-信息审核
 * @param {string} id id
  
 * @return { ResponseDataCheckVo }
 */
export function detailUsingGET(data:{ id: string; }): Promise<ResponseDataCheckVo['data']> {
    const path = `/check/detail`;

    let localVarQueryParameter = { params: { ...data }} as any;


    return GET(path, localVarQueryParameter);
}

/**
 * 
 * @summary 审核中心-信息审核-审核流详情
 * @tags 审核中心-信息审核-审核流
 * @param {string} id id
  
 * @return { ResponseDataCheckFlowVo }
 */
export function detailUsingGET1(data:{ id: string; }): Promise<ResponseDataCheckFlowVo['data']> {
    const path = `/check/flow/detail`;

    let localVarQueryParameter = { params: { ...data }} as any;


    return GET(path, localVarQueryParameter);
}

/**
 * 
 * @summary 审核设置详情
 * @tags 审核设置
 * @param {string} id id
  
 * @return { ResponseDataCheckSetVo }
 */
export function detailUsingGET2(data:{ id: string; }): Promise<ResponseDataCheckSetVo['data']> {
    const path = `/check/set/detail`;

    let localVarQueryParameter = { params: { ...data }} as any;


    return GET(path, localVarQueryParameter);
}

/**
 * 
 * @summary 下载
 * @tags 文件管理
 * @param {string} [filePath] filePath
  
 * @return { ResponseData }
 */
export function downloadUsingGET(data:{ filePath?: string; }): Promise<ResponseData['data']> {
    const path = `/api/download`;

    let localVarQueryParameter = { params: { ...data }} as any;


    return GET(path, localVarQueryParameter);
}

/**
 * 
 * @summary 新增/修改
 * @tags 基础管理-用户管理
 * @param {UserVo} [userVo] 
  
 * @return { ResponseDataBoolean }
 */
export function editUsingPOST3(data:UserVo): Promise<ResponseDataBoolean['data']> {
    const path = `/api/v1/user/manage/edit`;

    let localVarQueryParameter = { params: { ...data }} as any;

    localVarQueryParameter = data;

    return POST(path, localVarQueryParameter);
}

/**
 * 
 * @summary 根据token获取用户信息
 * @tags 基础管理-用户管理
 
 * @return { ResponseDataCacheUser }
 */
export function getUserInfoByTokenUsingGET(): Promise<ResponseDataCacheUser['data']> {
    const path = `/api/v1/user/manage/getUserInfoByToken`;

    let localVarQueryParameter = { params: {  }} as any;


    return GET(path, localVarQueryParameter);
}

/**
 * 
 * @summary 审核中心-信息审核-根据审核编号查询审核流列表
 * @tags 审核中心-信息审核-审核流
 * @param {string} checkId checkId
  
 * @return { ResponseDataListCheckFlowVo }
 */
export function listByCheckIdUsingGET(data:{ checkId: string; }): Promise<ResponseDataListCheckFlowVo['data']> {
    const path = `/check/flow/list/checkId`;

    let localVarQueryParameter = { params: { ...data }} as any;


    return GET(path, localVarQueryParameter);
}

/**
 * 
 * @summary 审核中心-信息审核-根据审核关联业务编号查询审核流列表
 * @tags 审核中心-信息审核-审核流
 * @param {string} relateId relateId
  
 * @return { ResponseDataListCheckFlowVo }
 */
export function listByRelateIdUsingGET(data:{ relateId: string; }): Promise<ResponseDataListCheckFlowVo['data']> {
    const path = `/check/flow/list/relateId`;

    let localVarQueryParameter = { params: { ...data }} as any;


    return GET(path, localVarQueryParameter);
}

/**
 * 
 * @summary 操作人信息下拉
 * @tags 基础管理-用户管理
 * @param {string} [transferPhase] transferPhase
  * @param {number} [permissionType] permissionType
  
 * @return { ResponseDataListLabelValueVo }
 */
export function listOperatorUsingGET(data:{ transferPhase?: string; permissionType?: number; }): Promise<ResponseDataListLabelValueVo['data']> {
    const path = `/api/v1/user/manage/list/operator`;

    let localVarQueryParameter = { params: { ...data }} as any;


    return GET(path, localVarQueryParameter);
}

/**
 * 
 * @summary 退出登录
 * @tags 基础管理-用户管理
 
 * @return { ResponseDataString }
 */
export function logOutUsingGET(): Promise<ResponseDataString['data']> {
    const path = `/api/v1/user/manage/logout`;

    let localVarQueryParameter = { params: {  }} as any;


    return GET(path, localVarQueryParameter);
}

/**
 * 
 * @summary 登录
 * @tags 基础管理-用户管理
 * @param {LoginDto} [loginDto] 
  
 * @return { ResponseDataCacheUser }
 */
export function loginUsingPOST(data:LoginDto): Promise<ResponseDataCacheUser['data']> {
    const path = `/api/v1/user/manage/login`;

    let localVarQueryParameter = { params: { ...data }} as any;

    localVarQueryParameter = data;

    return POST(path, localVarQueryParameter);
}

/**
 * 
 * @summary 审核中心-信订单单价低于基准价审核分页
 * @tags 审核中心-信息审核
 * @param {string} [addressName] 提货点
  * @param {string} [customerName] 客户名称
  * @param {string} [endDateTime] 结束时间,不需要前端传，用于后端转换存储值
  * @param {string} [endTime] 结束时间
  * @param {string} [id] 主键采用uuid
  * @param {number} [limit] 数量
  * @param {string} [operatorId] 操作人id
  * @param {string} [operatorName] 操作人名称
  * @param {string} [orderNumber] 订单号
  * @param {number} [page] 页码
  * @param {string} [productName] 产品名称
  * @param {number} [productType] 产品类型
  * @param {string} [providerName] 供应商名称
  * @param {string} [reason] 申请原因
  * @param {string} [remark] 备注
  * @param {string} [s] 模糊查询
  * @param {string} [schedulingNumber] 调度单号
  * @param {string} [startDateTime] 开始时间,不需要前端传，用于后端转换存储值
  * @param {string} [startTime] 开始时间
  * @param {number} [status] 查询类型_null：待我审核，非null：审核记录
  * @param {string} [userId] 用户编号
  * @param {number} [version] 乐观锁
  
 * @return { ResponseDataIPageCheckVo }
 */
export function orderPageNewUsingGET(data:{ addressName?: string; customerName?: string; endDateTime?: string; endTime?: string; id?: string; limit?: number; operatorId?: string; operatorName?: string; orderNumber?: string; page?: number; productName?: string; productType?: number; providerName?: string; reason?: string; remark?: string; s?: string; schedulingNumber?: string; startDateTime?: string; startTime?: string; status?: number; userId?: string; version?: number; }): Promise<ResponseDataIPageCheckVo['data']> {
    const path = `/check/list/order`;

    let localVarQueryParameter = { params: { ...data }} as any;


    return GET(path, localVarQueryParameter);
}

/**
 * 
 * @summary 审核中心-信息审核-审核流分页
 * @tags 审核中心-信息审核-审核流
 * @param {string} [checkId] 信息审核id
  * @param {string} [checkSetId] 审核设置id
  * @param {string} [endDateTime] 结束时间,不需要前端传，用于后端转换存储值
  * @param {string} [endTime] 结束时间
  * @param {number} [firstEdit] 首次生成_1：是，2：否
  * @param {string} [id] 主键采用uuid
  * @param {number} [limit] 数量
  * @param {number} [page] 页码
  * @param {string} [remark] 备注
  * @param {string} [s] 模糊查询
  * @param {number} [sort] 排序
  * @param {string} [startDateTime] 开始时间,不需要前端传，用于后端转换存储值
  * @param {string} [startTime] 开始时间
  * @param {number} [status] 审核流类型状态_1：待审核，2：已审核
  * @param {number} [type] 审核流类型_1：单人，2：多人
  * @param {number} [version] 乐观锁
  
 * @return { ResponseDataIPageCheckFlowVo }
 */
export function orderPageNewUsingGET1(data:{ checkId?: string; checkSetId?: string; endDateTime?: string; endTime?: string; firstEdit?: number; id?: string; limit?: number; page?: number; remark?: string; s?: string; sort?: number; startDateTime?: string; startTime?: string; status?: number; type?: number; version?: number; }): Promise<ResponseDataIPageCheckFlowVo['data']> {
    const path = `/check/flow/list`;

    let localVarQueryParameter = { params: { ...data }} as any;


    return GET(path, localVarQueryParameter);
}

/**
 * 
 * @summary 审核设置分页
 * @tags 审核设置
 * @param {string} [endDateTime] 结束时间,不需要前端传，用于后端转换存储值
  * @param {string} [endTime] 结束时间
  * @param {string} [id] 主键采用uuid
  * @param {number} [limit] 数量
  * @param {string} [name] 审核名称
  * @param {number} [page] 页码
  * @param {string} [remark] 备注
  * @param {string} [s] 模糊查询
  * @param {string} [startDateTime] 开始时间,不需要前端传，用于后端转换存储值
  * @param {string} [startTime] 开始时间
  * @param {number} [type] 审核类型_1：储槽业务更改，2：基准价格审核，3：订单低于基准价格，4：调度提货点单价
  * @param {number} [version] 乐观锁
  
 * @return { ResponseDataIPageCheckSetVo }
 */
export function orderPageNewUsingGET2(data:{ endDateTime?: string; endTime?: string; id?: string; limit?: number; name?: string; page?: number; remark?: string; s?: string; startDateTime?: string; startTime?: string; type?: number; version?: number; }): Promise<ResponseDataIPageCheckSetVo['data']> {
    const path = `/check/set/list`;

    let localVarQueryParameter = { params: { ...data }} as any;


    return GET(path, localVarQueryParameter);
}

/**
 * 
 * @summary 审核设置新增编辑
 * @tags 审核设置
 * @param {CheckSetDto} [checkSetDto] 
  
 * @return { ResponseDataBoolean }
 */
export function saveUsingPOST(data:CheckSetDto): Promise<ResponseDataBoolean['data']> {
    const path = `/check/set/save`;

    let localVarQueryParameter = { params: { ...data }} as any;

    localVarQueryParameter = data;

    return POST(path, localVarQueryParameter);
}

/**
 * 
 * @summary 角色下拉
 * @tags 下拉通用
 
 * @return { ResponseDataListLabelValueVo }
 */
export function selectNoPageUsingGET(): Promise<ResponseDataListLabelValueVo['data']> {
    const path = `/labelValue/roleDropDown`;

    let localVarQueryParameter = { params: {  }} as any;


    return GET(path, localVarQueryParameter);
}

/**
 * 
 * @summary 分页查询
 * @tags 基础管理-用户管理
 * @param {string} [endDateTime] 结束时间,不需要前端传，用于后端转换存储值
  * @param {string} [endTime] 结束时间
  * @param {number} [limit] 数量
  * @param {number} [page] 页码
  * @param {string} [s] 模糊查询
  * @param {string} [startDateTime] 开始时间,不需要前端传，用于后端转换存储值
  * @param {string} [startTime] 开始时间
  * @param {string} [userName] 用户名
  
 * @return { ResponseDataIPageUserDto }
 */
export function selectUsingGET3(data:{ endDateTime?: string; endTime?: string; limit?: number; page?: number; s?: string; startDateTime?: string; startTime?: string; userName?: string; }): Promise<ResponseDataIPageUserDto['data']> {
    const path = `/api/v1/user/manage/select`;

    let localVarQueryParameter = { params: { ...data }} as any;


    return GET(path, localVarQueryParameter);
}

/**
 * 
 * @summary 上传文件(图片base64)
 * @tags 文件管理
 * @param {FileUploadBase64Request} [fileUploadBase64Request] 
  
 * @return { ResponseDataString }
 */
export function uploadBase64UsingPOST(data:FileUploadBase64Request): Promise<ResponseDataString['data']> {
    const path = `/api/upload/base64`;

    let localVarQueryParameter = { params: { ...data }} as any;

    localVarQueryParameter = data;

    return POST(path, localVarQueryParameter);
}

/**
 * 
 * @summary 多文件上传
 * @tags 文件管理
 * @param {File} [body] 
  
 * @return { ResponseDataListString }
 */
export function uploadManyUsingPOST(data:File): Promise<ResponseDataListString['data']> {
    const path = `/api/uploadMany`;

    let localVarQueryParameter = { params: { ...data }} as any;

    localVarQueryParameter = data;

    return POST(path, localVarQueryParameter);
}

/**
 * 
 * @summary 上传
 * @tags 文件管理
 * @param {File} [body] 
  
 * @return { ResponseDataString }
 */
export function uploadUsingPOST(data:File): Promise<ResponseDataString['data']> {
    const path = `/api/upload`;

    let localVarQueryParameter = { params: { ...data }} as any;

    localVarQueryParameter = data;

    return POST(path, localVarQueryParameter);
}

/**
 * 
 * @summary 用户下拉
 * @tags 下拉通用
 
 * @return { ResponseDataListLabelValueVo }
 */
export function userDropDownUsingGET(): Promise<ResponseDataListLabelValueVo['data']> {
    const path = `/labelValue/userDropDown`;

    let localVarQueryParameter = { params: {  }} as any;


    return GET(path, localVarQueryParameter);
}

